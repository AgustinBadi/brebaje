Enum CEREMONY_TYPE {
  'PHASE1'
  'PHASE2'
}

Enum CEREMONY_STATE {
  'SCHEDULED'
  'OPENED'
  'PAUSED'
  'CLOSED'
  'CANCELED'
  'FINALIZED'
}

Enum CIRCUIT_TIMEOUT_TYPE {
  'DYNAMIC'
  'FIXED'
  'LOBBY'
}

Enum PARTICIPANT_STATUS {
  'CREATED'
  'WAITING'
  'READY'
  'CONTRIBUTING'
  'CONTRIBUTED'
  'DONE'
  'FINALIZING'
  'FINALIZED'
  'TIMEDOUT'
  'EXHUMED'
}

Enum PARTICIPANT_CONTRIBUTION_STEP {
  'DOWNLOADING'
  'COMPUTING'
  'UPLOADING'
  'VERIFYING'
  'COMPLETED'
}

Table users {
  id int [pk, increment]
  displayName varchar
  creationTime int
  lastSignInTime int
  lastUpdated int
  avatarUrl int
  provider varchar
}

Table projects {
  id int [pk, increment]
  name varchar [note: 'title in the frontend']
  contact varchar [note: 'E.g.: nicoserranop (Discord)']
  coordinatorId int [ref: > users.id, not null]
}

Table ceremonies {
  projectId int [ref: > projects.id, not null]
  id int [pk, increment]
  description varchar [note: 'description in the frontend']
  type CEREMONY_TYPE [default: 'PHASE2']
  state CEREMONY_STATE [default: 'SCHEDULED']
  start_date int
  end_date int
  penalty int
  authProviders json [note: 'check auth providers classes']
}

Table circuits {
  ceremonyId int [ref: > ceremonies.id, not null]
  id int [pk, increment]
  name varchar
  timeoutMechanismType CIRCUIT_TIMEOUT_TYPE [default: 'FIXED']
  dynamicThreshold int
  fixedTimeWindow int
  sequencePosition int
  zKeySizeInBytes int
  constraints int
  pot int
  averageContributionComputationTime int
  averageFullContributionTime int
  averageVerifyContributionTime int
  compiler json
  template json
  verification json
  artifacts json
  metadata json
  files json
}

Table contributions {
  circuitId int [ref: > circuits.id, not null]
  participantId int [ref: > participants.id, not null]
  id int [pk, increment]
  contributionComputationTime int
  fullContributionTime int
  verifyContributionTime int
  zkeyIndex int
  valid boolean
  lastUpdated int
  files json
  verificationSoftware json
  beacon json
}

Table participants {
  userId int [ref: > users.id, not null]
  ceremonyId int [ref: > ceremonies.id, not null]
  id int [pk, increment]
  status PARTICIPANT_STATUS [default: 'CREATED']
  contributionStep PARTICIPANT_CONTRIBUTION_STEP
  contributionProgress int
  contributionStartedAt int
  verificationStartedAt int
  tempContributionData json
  timeout json [note: 'Array of timeouts. Check Timeout class']
}
